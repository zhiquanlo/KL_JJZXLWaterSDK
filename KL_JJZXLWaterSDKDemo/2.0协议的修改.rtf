{\rtf1\ansi\ansicpg936\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fswiss\fcharset0 Helvetica;\f4\fnil\fcharset134 PingFangSC-Semibold;}
{\colortbl;\red255\green255\blue255;\red211\green35\blue46;\red31\green32\blue41;\red225\green226\blue231;
\red34\green160\blue85;\red34\green160\blue85;\red50\green207\blue114;\red130\green193\blue158;\red37\green144\blue141;
\red65\green161\blue192;\red215\green0\blue143;\red199\green122\blue75;\red20\green156\blue146;\red29\green169\blue162;
\red69\green187\blue62;\red93\green216\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c82745\c13725\c18039;\csgenericrgb\c12157\c12549\c16078;\csgenericrgb\c88217\c88535\c90427;
\csgenericrgb\c13472\c62889\c33229\c45000;\csgenericrgb\c13472\c62889\c33229;\csgenericrgb\c19443\c81327\c44651;\csgenericrgb\c50844\c75712\c61828;\csgenericrgb\c14440\c56530\c55465;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c84398\c0\c55980;\csgenericrgb\c78039\c47843\c29412;\csgenericrgb\c7843\c61177\c57255;\csgenericrgb\c11560\c66089\c63506;
\csgenericrgb\c26985\c73392\c24249;\csgenericrgb\c36295\c84643\c99897;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17780\viewh14660\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 QSMNetworkAPI 
\f1 \'ce\'c4\'bc\'fe
\f0 \cf4 \
\cf5 /**\cf4 \
 
\f1 \cf6 \'bd\'fb\'d3\'c3\'c3\'dc\'d4\'bf\'b5\'c4\'d0\'de\'b8\'c4\'cd\'a8\'d6\'aa
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 devMac
\f3 \cf6  MAC
\f1 \'b5\'d8\'d6\'b7
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 keyNo
\f3 \cf6   
\f1 \'c3\'dc\'d4\'bf\'b1\'e0\'c2\'eb
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 keyType
\f3 \cf6  
\f1 \'c3\'dc\'d4\'bf\'c0\'e0\'d0\'cd\'d7\'b4\'cc\'ac
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'c7\'eb\'c7\'f3\'bd\'e1\'b9\'fb\'bb\'d8\'b5\'f7
\f0 \cf4 \
 
\f2\b \cf7 @return 
\f1\b0 \cf6 \'c7\'eb\'c7\'f3\'b6\'d4\'cf\'f3
\f0 \cf4 \
\cf5 */\cf4 \
+ (\cf9 NSURLSessionDataTask\cf4  *)\cf10 deviceSecretNotifyDevMac\cf4 :(\cf9 NSString\cf4  *)devMac \cf10 keyNo\cf4 :(\cf9 NSString\cf4  *)keyNo \cf10 keyType\cf4 :(\cf9 NSString\cf4  *)keyType \cf10 retHandler\cf4 :(\cf11 void\cf4 (^)(\cf11 id\cf4  responseObject, \cf9 NSError\cf4  *error))retHandler\{\
    \cf11 if\cf4  (!devMac||!keyNo||!keyType) \{\
        \cf12 DEBUG_METHOD\cf4 (\cf2 @"-%s-
\f1 \'b4\'ab\'c8\'eb\'bf\'d5\'b5\'c4\'b2\'ce\'ca\'fd
\f0 "\cf4 ,\cf11 __FUNCTION__\cf4 );\
        \cf11 if\cf4  (retHandler) retHandler( \cf13 @\{\cf2 @"message"\cf4 :[\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"devMac%@keyNo%@keyType%@"\cf4 ,devMac,keyNo,keyType]\cf13 \}\cf4 ,\cf11 nil\cf4 );\
        \cf11 return\cf4  \cf11 nil\cf4 ;\
    \}\
    \cf9 NSMutableDictionary\cf4  *params = [\cf9 NSMutableDictionary\cf4  \cf9 dictionary\cf4 ];\
    [params \cf9 setObject\cf4 :devMac \cf9 forKey\cf4 :\cf2 @"devMac"\cf4 ];\
    [params \cf9 setObject\cf4 :keyNo \cf9 forKey\cf4 :\cf2 @"keyNo"\cf4 ];\
    [params \cf9 setObject\cf4 :keyType \cf9 forKey\cf4 :\cf2 @"keyType"\cf4 ];\
    \cf9 NSString\cf4  *urlString = [\cf12 KServerHost\cf4  \cf9 stringByAppendingString\cf4 :\cf2 @"/device/secret/notify"\cf4 ];\
    \cf11 return\cf4  [\cf14 QSMNetworkAPI\cf4  \cf14 startGetOrPostWithURL\cf4 :urlString \cf14 andParams\cf4 :params \cf14 requestType\cf4 :\cf13 1\cf4  \cf14 isLoginCode\cf4 :\cf11 YES\cf4   \cf14 result\cf4 :retHandler];\
\}\cf2 \
\
QSBluetoothOperateTool
\f1 \cf4 \'ce\'c4\'bc\'fe\
\
\

\f0 \
\cf12 #pragma mark 
\f2\b \cf7 - 
\f4 \'d7\'e9\'ba\'cf\'d6\'b8\'c1\'ee
\f0\b0 \cf4 \
\
- (\cf11 void\cf4 )\cf10 assginRateToLaundryModel\cf4 :(\cf14 QSLaundryModel\cf4  *)laundryModel \cf10 result\cf4 :(\cf14 BOBLESyncResultBlock\cf4 )retHandler\
\{\
    \cf11 if\cf4  (!\cf11 self\cf4 .\cf14 devInfo\cf4 .\cf14 keyNo\cf4  || ![\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 commMode\cf4  \cf9 isEqualToString\cf4 :\cf2 @"20"\cf4 ]) \{\
        [\cf11 self\cf4  \cf14 startAssginRateToLaundryModel\cf4 :laundryModel \cf14 result\cf4 :retHandler];\
    \}\cf11 else\cf4 \{\
        \cf12 WS\cf4 (ws);\
\cf15 //        
\f1 \'bd\'fb\'d3\'c3\'c3\'dc\'d4\'bf
\f0 \cf4 \
        [\cf11 self\cf4  \cf14 disableKeyNoResult\cf4 :^(\cf11 BOOL\cf4  result) \{\
            \cf9 NSString\cf4  *keyNo = ws.\cf14 devInfo\cf4 .\cf14 keyNo\cf4 ;\
            \cf9 NSString\cf4  *keyType = ws.\cf14 devInfo\cf4 .\cf14 keyType\cf4 ;\
            ws.\cf14 devInfo\cf4 .\cf14 keyNo\cf4  = \cf11 nil\cf4 ;\
            [ws \cf14 startAssginRateToLaundryModel\cf4 :laundryModel \cf14 result\cf4 :retHandler];\
            [\cf14 QSMNetworkAPI\cf4  \cf14 deviceSecretNotifyDevMac\cf4 :ws.\cf14 devInfo\cf4 .\cf14 macAddress\cf4  \cf14 keyNo\cf4 :keyNo \cf14 keyType\cf4 :keyType \cf14 retHandler\cf4 :\cf11 nil\cf4 ];\
        \}];\
    \}\
\}
\f1 \
\

\f0 \
- (\cf11 void\cf4 )\cf10 uploadConsumptionData\cf4 :(\cf9 KRConsumptionDetailsObject\cf4 *)cdObject \cf10 result\cf4 :(\cf11 void\cf4 (^)(\cf11 BOOL\cf4  result, \cf14 QSConsumptionData\cf4  *dataObj))retHandler\
\{\
    \cf11 if\cf4  (!cdObject)\
    \{\
        \cf11 if\cf4  (retHandler)\
        \{\
            retHandler(\cf11 FALSE\cf4 , \cf11 nil\cf4 );\
        \}\
        \cf11 return\cf4 ;\
    \}\
    \cf9 NSMutableDictionary\cf4  *params = [\cf9 NSMutableDictionary\cf4  \cf9 dictionary\cf4 ];\
    \cf11 if\cf4  (cdObject.\cf9 productId\cf4 ) \{\
        [params \cf9 setObject\cf4 :cdObject.\cf9 productId\cf4  \cf9 forKey\cf4 :\cf2 @"projectId"\cf4 ];\
    \}\
    \cf11 if\cf4  (cdObject.\cf9 accountId\cf4 ) \{\
        [params \cf9 setObject\cf4 :cdObject.\cf9 accountId\cf4  \cf9 forKey\cf4 :\cf2 @"accountId"\cf4 ];\
    \}\
    \cf11 if\cf4  (cdObject.\cf9 consumeMone\cf4 ) \{\
        [params \cf9 setObject\cf4 :cdObject.\cf9 consumeMone\cf4  \cf9 forKey\cf4 :\cf2 @"upMoney"\cf4 ];\
    \}\
    \cf11 if\cf4  (\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 commMode\cf4 ) \{\
        [params \cf9 setObject\cf4 :\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 commMode\cf4  \cf9 forKey\cf4 :\cf2 @"protocolType"\cf4 ];\
    \}\
    \cf11 if\cf4  (cdObject.\cf9 timeId\cf4 ) \{\
        \cf9 NSString\cf4  *timeString = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"20%@"\cf4 ,cdObject.\cf9 timeId\cf4 ];\
        [params \cf9 setObject\cf4 :timeString \cf9 forKey\cf4 :\cf2 @"consumeDate"\cf4 ];\
    \}\
    \cf11 if\cf4  (cdObject.\cf9 accountType\cf4 ) \{\
        [params \cf9 setObject\cf4 :cdObject.\cf9 accountType\cf4  \cf9 forKey\cf4 :\cf2 @"accountType"\cf4 ];\
    \}\
    \cf11 if\cf4  (cdObject.\cf9 xfData\cf4 ) \{\
        [params \cf9 setObject\cf4 :[\cf9 KRWMUtils\cf4  \cf9 bytesStringWithData\cf4 :cdObject.\cf9 xfData\cf4 ] \cf9 forKey\cf4 :\cf2 @"xfData"\cf4 ];\
    \}\
    \cf11 if\cf4  (\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 tacTimes\cf4 ) \{\
        [params \cf9 setObject\cf4 :\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 tacTimes\cf4  \cf9 forKey\cf4 :\cf2 @"randomNumber"\cf4 ];\
    \}\
    [params \cf9 setObject\cf4 :\cf12 USERINFO\cf4 .\cf14 telPhone\cf4  \cf9 forKey\cf4 :\cf2 @"telPhone"\cf4 ];\
    [\cf11 self\cf4  \cf14 uploadConsumDataForThreeTimesIfError\cf4 :params \cf14 result\cf4 :retHandler];\
\}\
\
\cf5 ///\cf4  
\f1 \cf6 \'c9\'cf\'b4\'ab\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd\'bd\'e1\'b9\'fb
\f0 \cf4 \
\cf5 ///\cf4  
\f2\b \cf7 @param 
\f0\b0 \cf8 responseObject
\f3 \cf6  
\f1 \'ca\'fd\'be\'dd
\f0 \cf4 \
\cf5 ///\cf4  
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'b7\'b5\'bb\'d8\'bd\'e1\'b9\'fb
\f0 \cf4 \
- (\cf11 void\cf4 )\cf10 uploadConsumDataResponseObject\cf4 :(\cf11 id\cf4 )responseObject \cf10 params\cf4 :(\cf9 NSMutableDictionary\cf4  *)params \cf10 result\cf4 :(\cf11 void\cf4 (^)(\cf11 BOOL\cf4  result, \cf14 QSConsumptionData\cf4  *dataObj))retHandler\{\
    \cf12 DEBUG_METHOD\cf4 (\cf2 @"---QSConsumptionData---%@"\cf4 ,responseObject[\cf2 @"data"\cf4 ]);\
    \cf11 if\cf4  ([\cf9 NSObject\cf4  \cf14 MerrorCodeResponseObject\cf4 :responseObject]==\cf13 0\cf4 )\
        \{\
            \cf14 QSConsumptionData\cf4  *cData = [\cf14 QSConsumptionData\cf4  \cf9 yy_modelWithJSON\cf4 :responseObject[\cf2 @"data"\cf4 ]];\
            \cf11 if\cf4  (!cData.\cf14 clData\cf4  || !cData.\cf14 clData\cf4 .\cf9 length\cf4 ) \{\
                [\cf9 MobClick\cf4  \cf9 event\cf4 :\cf12 failedToClearConsumptionData\cf4  \cf9 attributes\cf4 :\cf13 @\{\cf2 @"clData"\cf4 :[\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@%@"\cf4 ,cData.\cf14 clData\cf4 ,responseObject],\cf2 @"macAddress"\cf4 :\cf11 self\cf4 .\cf14 devInfo\cf4 .\cf14 macAddress\cf13 \}\cf4 ];\
            \}\
            \cf12 DEBUG_METHOD\cf4 (\cf2 @"---QSConsumptionData---%@"\cf4 ,cData.yy_modelDescription);\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 TRUE\cf4 ,cData);\
            \}\
        \}\
    \cf11 else\cf4  \cf11 if\cf4  ([\cf9 NSObject\cf4  \cf14 MerrorCodeResponseObject\cf4 :responseObject]==\cf13 206\cf4 ||[params[\cf2 @"consumeDate"\cf4 ] \cf9 isEqualToString\cf4 :\cf2 @"20000000000000"\cf4 ]||[\cf9 NSObject\cf4  \cf14 MerrorCodeResponseObject\cf4 :responseObject]==\cf13 209\cf4 )\{\
        \cf14 QSConsumptionData\cf4  *cData = [\cf14 QSConsumptionData\cf4  \cf9 yy_modelWithJSON\cf4 :responseObject[\cf2 @"data"\cf4 ]];\
        \cf11 self\cf4 .\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@"\cf4 ,responseObject[\cf2 @"message"\cf4 ]];\
        \cf11 if\cf4  (!cData.\cf14 clData\cf4  || !cData.\cf14 clData\cf4 .\cf9 length\cf4 ) \{\
            [\cf9 MobClick\cf4  \cf9 event\cf4 :\cf12 failedToClearConsumptionData\cf4  \cf9 attributes\cf4 :\cf13 @\{\cf2 @"clData"\cf4 :[\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@%@"\cf4 ,cData.\cf14 clData\cf4 ,responseObject],\cf2 @"macAddress"\cf4 :\cf11 self\cf4 .\cf14 devInfo\cf4 .\cf14 macAddress\cf13 \}\cf4 ];\
        \}\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(\cf11 TRUE\cf4 ,cData);\
        \}\
    \}\
    \cf11 else\cf4 \
    \{\
        \cf11 self\cf4 .\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@%@"\cf4 ,responseObject[\cf2 @"message"\cf4 ],responseObject[\cf2 @"errorCode"\cf4 ]];\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(\cf11 FALSE\cf4 ,\cf11 nil\cf4 );\
        \}\
    \}\
\}\
\
\
- (\cf11 void\cf4 )\cf10 startUploadConsumptionData\cf4 :(\cf9 KRConsumptionDetailsObject\cf4 *)cdObject \cf10 dataCallBack\cf4 :(\cf11 void\cf4 (^)(\cf14 QSConsumptionData\cf4  *cDataObj))dataCallBack \cf10 result\cf4 :(\cf14 BOBLESyncResultBlock\cf4 )retHandler\{\
    \cf12 WS\cf4 (ws);\
    [\cf14 QSLoadingView\cf4  \cf14 showLoadingImageName\cf4 :\cf11 nil\cf4  \cf14 content\cf4 :\cf2 @"
\f1 \'d5\'fd\'d4\'da\'c9\'cf\'b4\'ab\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd
\f0 "\cf4  tag:\cf12 LOADINGVIEWDEFAULTTAG\cf4 +\cf13 100\cf4 ];\
    [\cf11 self\cf4  \cf14 uploadConsumptionData\cf4 :cdObject \cf14 result\cf4 :^(\cf11 BOOL\cf4  result, \cf14 QSConsumptionData\cf4  *dataObj) \{\
        [\cf14 QSLoadingView\cf4  \cf14 hiddenLoadingTag\cf4 :\cf12 LOADINGVIEWDEFAULTTAG\cf4 +\cf13 100\cf4 ];\
        \cf11 if\cf4  (result) \{\
            \cf9 NSData\cf4  *writeData = [dataObj.\cf14 cmd86Data\cf4  \cf14 convertHexStrToData\cf4 ];\
\cf5 /**\cf4 \
 
\f1 \cf6 \'bb\'f1\'c8\'a1\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd
\f0 \cf4 \

\f3 \cf6  
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd\'bb\'d8\'b5\'f7
\f0 \cf4 \
\cf5  */\cf4 \
- (\cf11 void\cf4 )\cf10 getConsumptionDetailsStateObject\cf4 :(\cf9 KRStateObject\cf4  *)stateObject \cf10 retHandler\cf4 :(\cf11 void\cf4 (^)(\cf9 KRConsumptionDetailsObject\cf4  *cdObject))retHandler\
\{\
    \cf12 WS\cf4 (ws);\
    [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ]\cf9 krGetConsumptionDetails\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
        \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
        \cf11 if\cf4  (ret)\
        \{\
            \cf9 KRConsumptionDetailsObject\cf4  *tmpCObject = [\cf9 KRConsumptionDetailsObject\cf4  \cf9 consumptionDetailsObjectWithDetailsFromData\cf4 :data];\
\cf12 #ifdef KShowUserMeterLog\cf4 \
            \cf9 NSString\cf4  *consumString = [tmpCObject \cf9 yy_modelDescription\cf4 ];\
            \cf11 if\cf4  (consumString) \{\
                [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ].\cf9 AllLogString\cf4  \cf9 appendFormat\cf4 :\cf2 @"
\f1 \'c9\'e8\'b1\'b8\'b7\'b5\'bb\'d8\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd\'a3\'ba
\f0 %@\\n"\cf4 ,consumString];\
                [\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ].\cf9 logStringChanged\cf4  = \cf11 YES\cf4 ;\
            \}\
\cf12 #endif\cf4 \
            \
            \cf11 if\cf4  (retHandler) \{\
                retHandler(tmpCObject);\
            \}\
        \}\
        \cf11 else\cf4 \
        \{\
            ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'bb\'f1\'c8\'a1\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd\'ca\'a7\'b0\'dc
\f0 "\cf4 ;\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 nil\cf4 );\
            \}\
        \}\
    \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
        \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
        \{\
            ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'bb\'f1\'c8\'a1\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd\'ca\'a7\'b0\'dc
\f0 "\cf4 ;\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 nil\cf4 );\
            \}\
        \}\
    \}];\
\}\
\
\
\cf5 /**\cf4 \
 
\f1 \cf6 \'b2\'e9\'d1\'af\'c9\'e8\'b1\'b8\'d7\'b4\'cc\'ac
\f0 \cf4 \

\f3 \cf6  
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'b2\'e9\'d1\'af\'bd\'e1\'b9\'fb\'bb\'d8\'b5\'f7
\f0 \cf4 \
\cf5  */\cf4 \
\
- (\cf11 void\cf4 )\cf10 fetchDeviceState\cf4 :(\cf11 void\cf4 (^)(\cf9 KRStateObject\cf4  *stateObject))retHandler\
\{\
    \cf12 DEBUG_METHOD\cf4 (\cf2 @"--
\f1 \'b2\'e9\'d1\'af\'c9\'e8\'b1\'b8\'d7\'b4\'cc\'ac
\f0 --"\cf4 );\
    \cf12 WS\cf4 (ws);\
    [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ]\cf9 krGetStateOfDevice\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
        \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
        \cf11 if\cf4  (ret) \{\
            \cf9 KRStateObject\cf4  *stateObject = [\cf9 KRStateObject\cf4  \cf9 stateObjectWithDetailsFromData\cf4 :data];\
            ws.\cf14 devStateObject\cf4  = stateObject;\
            \cf12 DEBUG_METHOD\cf4 (\cf2 @"---stateObject--%@"\cf4 ,stateObject.yy_modelDescription);\
\cf12 #ifdef KShowUserMeterLog\cf4 \
            \cf9 NSString\cf4  *stateString = [stateObject \cf9 yy_modelDescription\cf4 ];\
            \cf11 if\cf4  (stateString) \{\
                [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ].\cf9 AllLogString\cf4  \cf9 appendFormat\cf4 :\cf2 @"---
\f1 \'c9\'e8\'b1\'b8\'d7\'b4\'cc\'ac\'b2\'ce\'ca\'fd
\f0 ---%@\\n"\cf4 ,stateString];\
                [\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ].\cf9 logStringChanged\cf4  = \cf11 YES\cf4 ;\
            \}\
\cf12 #endif\cf4 \
            \
            \cf11 if\cf4  (retHandler) \{\
                retHandler(stateObject);\
            \}\
        \}\
        \cf11 else\cf4 \
        \{\
            \cf11 if\cf4  (!ret) \{\
                ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'b2\'e9\'d1\'af\'c9\'e8\'b1\'b8\'d7\'b4\'cc\'ac\'ca\'a7\'b0\'dc
\f0 "\cf4 ;\
            \}\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 nil\cf4 );\
            \}\
        \}\
    \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
        \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
        \{\
            ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'b2\'e9\'d1\'af\'c9\'e8\'b1\'b8\'d7\'b4\'cc\'ac\'ca\'a7\'b0\'dc
\f0 "\cf4 ;\
            retHandler(\cf11 nil\cf4 );\
        \}\
    \}];\
\}\
\cf5 /**\cf4 \
 
\f1 \cf6 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca
\f0 \cf4 \

\f3 \cf6  
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 rateData
\f3 \cf6  
\f1 \'b7\'d1\'c2\'ca\'d0\'c5\'cf\'a2
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'cf\'c2\'b7\'a2\'bd\'e1\'b9\'fb\'bb\'d8\'b5\'f7
\f0 \cf4 \
\cf5  */\cf4 \
- (\cf11 void\cf4 )\cf10 assignRate\cf4 :(\cf9 NSData\cf4 *)rateData \cf10 commMode\cf4 :(\cf9 NSString\cf4  *)commMode \cf10 result\cf4 :(\cf11 void\cf4 (^)(\cf11 BOOL\cf4  result))retHandler\
\{\
    \cf11 if\cf4  (!rateData ) \{\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(\cf11 FALSE\cf4 );\
        \}\
        \cf11 self\cf4 .\cf14 errMsg\cf4  = \cf2 @"
\f1 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca\'ca\'a7\'b0\'dc\'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ;\
        \cf11 return\cf4 ;\
    \}\
    \cf12 WS\cf4 (ws);\
    \cf11 if\cf4  (\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 maxType\cf4 .\cf9 integerValue\cf4  == \cf13 2\cf4  || \cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 maxType\cf4 .\cf9 integerValue\cf4 ==\cf13 5\cf4  || \cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 maxType\cf4 .\cf9 integerValue\cf4 ==\cf13 6\cf4 ) \{\
        [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ]\cf9 krTransactionRateForDetails\cf4 :rateData  \cf9 dataCallback\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
            \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
            \cf11 if\cf4  (!ret) \{\
                ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca\'ca\'a7\'b0\'dc\'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ;\
            \}\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(ret);\
            \}\
        \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
            \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
            \{\
                \cf11 if\cf4  (state == \cf9 KRSyncResponseStateNotConnected\cf4  || state == \cf9 KRSyncResponseStateDisconnect\cf4 ) \{\
                    ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'c0\'b6\'d1\'c0\'b6\'cf\'bf\'aa
\f0 %zi
\f1 \'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ,state];\
                \}\
                \cf11 else\cf4 \{\
                    ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca\'cd\'ac\'b2\'bd\'ca\'a7\'b0\'dc
\f0 %zi
\f1 \'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ,state];\
                \}\
                \cf11 if\cf4  (retHandler) \{\
                    retHandler(\cf11 FALSE\cf4 );\
                \}\
            \}\
        \}];\
        \cf11 return\cf4 ;\
    \}\
    \
    [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ]\cf9 krAssginRateForDevice\cf4 :rateData \cf9 commMode\cf4 :\cf11 self\cf4 .\cf14 devStateObject\cf4 .\cf9 commMode\cf4  \cf9 dataCallback\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
        \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
        \cf11 if\cf4  (!ret) \{\
            ws.\cf14 errMsg\cf4  = \cf2 @"
\f1 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca\'ca\'a7\'b0\'dc\'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ;\
        \}\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(ret);\
        \}\
    \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
        \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
        \{\
            \cf11 if\cf4  (state == \cf9 KRSyncResponseStateNotConnected\cf4  || state == \cf9 KRSyncResponseStateDisconnect\cf4 ) \{\
                ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'c0\'b6\'d1\'c0\'b6\'cf\'bf\'aa
\f0 %zi
\f1 \'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ,state];\
            \}\
            \cf11 else\cf4 \{\
                ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'cf\'c2\'b7\'a2\'b7\'d1\'c2\'ca\'cd\'ac\'b2\'bd\'ca\'a7\'b0\'dc
\f0 %zi
\f1 \'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 "\cf4 ,state];\
            \}\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 FALSE\cf4 );\
            \}\
        \}\
    \}];\
    \
\}\
\
\cf5 /**\cf4 \
 
\f1 \cf6 \'c7\'e5\'c0\'ed\'cf\'fb\'b7\'d1\'ca\'fd\'be\'dd
\f0 \cf4 \

\f3 \cf6  
\f0 \cf4 \
 
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'c7\'e5\'c0\'ed\'bd\'e1\'b9\'fb\'bb\'d8\'b5\'f7
\f0 \cf4 \
\cf5  */\cf4 \
\
- (\cf11 void\cf4 )\cf10 clearConsumptionData\cf4 :(\cf9 NSData\cf4 *)data \cf10 result\cf4 :(\cf11 void\cf4 (^)(\cf11 BOOL\cf4  result , \cf9 NSData\cf4  *resultData))retHandler\
\{\
    \cf11 if\cf4  (!data) \{\
        \cf11 self\cf4 .\cf14 errMsg\cf4  = [\cf11 self\cf4 .\cf14 errMsg\cf4  \cf9 stringByAppendingString\cf4 :\cf2 @"
\f1 \'a3\'ac\'c7\'e5\'b3\'fd\'ca\'fd\'be\'dd\'ca\'a7\'b0\'dc\'a3\'ac\'ca\'fd\'be\'dd\'d3\'f2\'ce\'aa\'bf\'d5
\f0 "\cf4 ];\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(\cf11 FALSE\cf4 ,\cf11 nil\cf4 );\
        \}\
        \cf11 return\cf4 ;\
    \}\
    \cf12 WS\cf4 (ws);\
    [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ]\cf9 krClearConsumptionDetails\cf4 :data \cf9 dataCallback\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
        \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
        \cf11 if\cf4  (!ret) \{\
            ws.\cf14 errMsg\cf4  =[\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@
\f1 \'a3\'ac\'c7\'e5\'b3\'fd\'ca\'fd\'be\'dd\'ca\'a7\'b0\'dc
\f0 %@"\cf4 ,ws.errMsg,data];\
        \}\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(ret,data);\
        \}\
    \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
        \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
        \{\
            ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"%@,
\f1 \'c7\'e5\'b3\'fd\'ca\'fd\'be\'dd\'ca\'a7\'b0\'dc
\f0 %zd"\cf4 ,ws.errMsg,state];\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 FALSE\cf4 ,\cf11 nil\cf4 );\
            \}\
        \}\
    \}];\
\}\
\
\cf5 ///\cf4  
\f1 \cf6 \'bd\'fb\'d3\'c3\'c3\'dc\'d4\'bf
\f0 \cf4 \
\cf5 ///\cf4  
\f2\b \cf7 @param 
\f0\b0 \cf8 retHandler
\f3 \cf6  
\f1 \'b7\'b5\'bb\'d8\'bd\'e1\'b9\'fb
\f0 \cf4 \
- (\cf11 void\cf4 )\cf10 disableKeyNoResult\cf4 :(\cf11 void\cf4 (^)(\cf11 BOOL\cf4  result))retHandler\{\
    \cf12 WS\cf4 (ws);\
    [[\cf9 KRWMCore\cf4  \cf9 sharedCore\cf4 ] \cf9 krDisableKeyNo\cf4 :\cf13 @(\cf11 self\cf4 .\cf14 devInfo\cf4 .\cf14 keyNo\cf4 .\cf9 intValue\cf13 )\cf4  \cf9 type\cf4 :\cf13 @(\cf11 self\cf4 .\cf14 devInfo\cf4 .\cf14 keyType\cf4 .\cf9 intValue\cf13 )\cf4  \cf9 dataCallback\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 NSData\cf4  *data) \{\
        \cf11 BOOL\cf4  ret = [\cf9 KRWMUtils\cf4  \cf9 isSuccessResponseWithData\cf4 :data];\
        \cf11 if\cf4  (!ret) \{\
            ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'bd\'fb\'d3\'c3\'c3\'dc\'d4\'bf\'ca\'a7\'b0\'dc
\f0 %@"\cf4 ,[KRWMUtils \cf9 bytesStringWithData\cf4 :data]];\
        \}\
        \cf11 if\cf4  (retHandler) \{\
            retHandler(ret);\
        \}\
    \} \cf9 result\cf4 :^(\cf9 KRSyncType\cf4  syncType, \cf9 KRSyncResponseState\cf4  state) \{\
        \cf11 if\cf4  (state != \cf9 KRSyncResponseStateSuccess\cf4 )\
        \{\
            ws.\cf14 errMsg\cf4  = [\cf9 NSString\cf4  \cf9 stringWithFormat\cf4 :\cf2 @"
\f1 \'bd\'fb\'d3\'c3\'c3\'dc\'d4\'bf\'ca\'a7\'b0\'dc\'d7\'b4\'cc\'ac
\f0 %zd"\cf4 ,state];\
            \cf11 if\cf4  (retHandler) \{\
                retHandler(\cf11 FALSE\cf4 );\
            \}\
        \}\
    \}];\
\}\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf16 \cb3 QSConsumptionData 
\f1 \'ce\'c4\'bc\'fe\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0 \cf11 \cb3 @interface\cf4  \cf16 \cb3 QSConsumptionData\cf4 \cb3  : \cf9 NSObject\cf4 \
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSNumber\cf4  *\cf10 perMoney\cf4 ;\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSNumber\cf4  *\cf10 upMoney\cf4 ;\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSNumber\cf4  *\cf10 upLeadMoney\cf4 ;\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSString\cf4  *\cf10 fishTime\cf4 ;\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 ,\cf11 strong\cf4 ) \cf9 NSNumber\cf4  *\cf10 orderAccountId\cf4 ;\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 ,\cf11 strong\cf4 ) \cf9 NSString\cf4  *\cf10 clData\cf4 ;\
\
\cf11 @property\cf4  (\cf11 nonatomic\cf4 ,\cf11 strong\cf4 )\cf9 NSString\cf4  *\cf10 cmd86Data\cf4 ;\
\cf11 @end\
\
\cf12 #import \cf2 "NSData+LBXCrypt.h"\cf11 \
@implementation\cf4  \cf16 \cb3 QSConsumptionData\cf4 \cb3 \
- (\cf9 NSString\cf4  *)\cf10 cmd86Data\cf4 \{\
    \cf11 if\cf4  (!\cf14 _cmd86Data\cf4  && \cf11 self\cf4 .\cf14 clData\cf4 ) \{\
        \
         \cf9 NSData\cf4  *data =  [[\cf9 NSData\cf4  \cf9 alloc\cf4 ]\cf9 initWithBase64EncodedString\cf4 :\cf11 self\cf4 .\cf14 clData\cf4  \cf9 options\cf4 :\cf13 0\cf4 ];\
         \cf9 NSError\cf4  *error = \cf11 nil\cf4 ;\
         \cf9 NSData\cf4  *enData = [data \cf9 LBXCryptWithOp\cf4 :\cf9 LBXOperaton_Decrypt\cf4  \cf9 algorithm\cf4 :\cf9 LBXAlgorithm_AES128\cf4  \cf9 optionMode\cf4 :\cf9 LBXOptionMode_ECB\cf4  \cf9 padding\cf4 :\cf9 LBXPaddingMode_PKCS5\cf4  \cf9 key\cf4 :\cf2 @"20210118klcx@002"\cf4  \cf9 iv\cf4 :\cf2 @"1234567876543210"\cf4  \cf9 error\cf4 :&error];\
        \cf9 NSString\cf4  *cmd86Data = [[\cf9 NSString\cf4  \cf9 alloc\cf4 ] \cf9 initWithData\cf4 :enData \cf9 encoding\cf4 :\cf9 kCFStringEncodingUTF8\cf4 ];\
        \cf9 NSArray\cf4  *cmd86DataArray = [cmd86Data \cf9 componentsSeparatedByString\cf4 :\cf2 @"-"\cf4 ];\
        \cf11 if\cf4  (cmd86DataArray.\cf9 count\cf4 >=\cf13 2\cf4 ) \{\
            \cf14 _cmd86Data\cf4  = cmd86DataArray[\cf13 1\cf4 ];\
        \}\cf11 else\cf4 \{\
            \cf14 _cmd86Data\cf4  = \cf11 self\cf4 .\cf14 clData\cf4 ;\
        \}\
    \}\
    \cf11 return\cf4  \cf14 _cmd86Data\cf4 ;\
\}\
\cf11 @end\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf16 \cb3 QSDeviceInfo 
\f1 \'ce\'c4\'bc\'fe
\f0 \cf11 \cb3 \
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf5 ///\cf4  
\f1 \cf6 \'b4\'b5\'b7\'e7\'bb\'fa\'ca\'c7\'b7\'f1
\f3 31
\f1 \'d0\'ad\'d2\'e9
\f0 \cf4 \
\cf11 @property\cf4  (\cf11 nonatomic\cf4 ,\cf11 strong\cf4 )\cf9 NSNumber\cf4  *\cf10 isNewDryer\cf4 ;\
\cf5 /**\cf4 \
 
\f1 \cf6 \'c3\'dc\'d4\'bf\'c0\'e0\'d0\'cd
\f3 0 
\f1 \'c6\'f4\'d3\'c3
\f3  1 
\f1 \'bd\'fb\'d3\'c3
\f0 \cf4 \
\cf5  */\cf4 \
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSString\cf4  *\cf10 keyType\cf4 ;\
\cf5 /**\cf4 \
 
\f1 \cf6 \'c3\'dc\'d4\'bf\'b1\'e0\'ba\'c5
\f0 \cf4 \
\cf5  */\cf4 \
\cf11 @property\cf4  (\cf11 nonatomic\cf4 , \cf11 strong\cf4 ) \cf9 NSString\cf4  *\cf10 keyNo\cf4 ;\
\
- (\cf9 NSNumber\cf4  *)\cf10 isNewDryer\cf4 \{\
    \cf11 if\cf4  (!\cf14 _isNewDryer\cf4 ) \{\
        \cf14 _isNewDryer\cf4  = \cf13 @0\cf4 ;\
    \}\
    \cf11 return\cf4  \cf14 _isNewDryer\cf4 ;\
\}\
\
}